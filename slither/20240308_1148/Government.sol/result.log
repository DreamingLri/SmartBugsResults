INFO:Slither:Compilation warnings/errors on /sb/Government.sol:
/sb/Government.sol:23:6: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
     function Government() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:37:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             msg.sender.send(amount);
             ^---------------------^
/sb/Government.sol:39:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             creditorAddresses[creditorAddresses.length - 1].send(profitFromCrash);
             ^-------------------------------------------------------------------^
/sb/Government.sol:40:32: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
             corruptElite.send(this.balance);
                               ^----------^
/sb/Government.sol:40:14: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
             corruptElite.send(this.balance);
             ^-----------------------------^
/sb/Government.sol:62:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 corruptElite.send(amount * 5/100);
                 ^-------------------------------^
/sb/Government.sol:70:22: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                     buddy.send(amount * 5/100);
                     ^------------------------^
/sb/Government.sol:75:22: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                     creditorAddresses[lastCreditorPayedOut].send(creditorAmounts[lastCreditorPayedOut]);
                     ^---------------------------------------------------------------------------------^
/sb/Government.sol:82:18: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                 msg.sender.send(amount);
                 ^---------------------^
/sb/Government.sol:23:6: Warning: No visibility specified. Defaulting to "public". 
     function Government() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:26:28: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
         profitFromCrash = msg.value;
                           ^-------^
/sb/Government.sol:31:6: Warning: No visibility specified. Defaulting to "public". 
     function lendGovernmentMoney(address buddy) returns (bool) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:32:24: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
         uint amount = msg.value;
                       ^-------^
/sb/Government.sol:89:6: Warning: No visibility specified. Defaulting to "public". 
     function() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:93:6: Warning: No visibility specified. Defaulting to "public". 
     function totalDebt() returns (uint debt) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:99:6: Warning: No visibility specified. Defaulting to "public". 
     function totalPayedOut() returns (uint payout) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:106:6: Warning: No visibility specified. Defaulting to "public". 
     function investInTheSystem() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:107:29: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
         profitFromCrash += msg.value;
                            ^-------^
/sb/Government.sol:111:6: Warning: No visibility specified. Defaulting to "public". 
     function inheritToNextGeneration(address nextGeneration) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:117:6: Warning: No visibility specified. Defaulting to "public". 
     function getCreditorAddresses() returns (address[]) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:121:6: Warning: No visibility specified. Defaulting to "public". 
     function getCreditorAmounts() returns (uint[]) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:93:6: Warning: Function state mutability can be restricted to view
     function totalDebt() returns (uint debt) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:99:6: Warning: Function state mutability can be restricted to view
     function totalPayedOut() returns (uint payout) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:117:6: Warning: Function state mutability can be restricted to view
     function getCreditorAddresses() returns (address[]) {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/Government.sol:121:6: Warning: Function state mutability can be restricted to view
     function getCreditorAmounts() returns (uint[]) {
     ^ (Relevant source part starts here and spans across multiple lines).

INFO:Detectors:[92m
Government.lendGovernmentMoney (/sb/Government.sol#31-91) uses timestamp for comparisons
	Dangerous comparisons:
	- lastTimeOfNewCredit + TWELVE_HOURS < block.timestamp (/sb/Government.sol#35-90)
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#block-timestamp[0m
INFO:Detectors:[92m
Government.fallback (/sb/Government.sol#93-94) should be declared external
Government.totalDebt (/sb/Government.sol#94-100) should be declared external
Government.totalPayedOut (/sb/Government.sol#100-105) should be declared external
Government.investInTheSystem (/sb/Government.sol#110-111) should be declared external
Government.inheritToNextGeneration (/sb/Government.sol#113-121) should be declared external
Government.getCreditorAddresses (/sb/Government.sol#121-124) should be declared external
Government.getCreditorAmounts (/sb/Government.sol) should be declared external
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#public-function-that-could-be-declared-as-external[0m
INFO:Detectors:[92m
Detected issues with version pragma in /sb/Government.sol:
	- pragma solidity^0.4.0 (/sb/Government.sol#8-10): it allows old versions
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#incorrect-version-of-solidity[0m
INFO:Detectors:[92m
Function 'Government.Government' (/sb/Government.sol#23-31) is not in mixedCase
Reference: https://github.com/trailofbits/slither/wiki/Detectors-Documentation#conformance-to-solidity-naming-conventions[0m
INFO:Slither:/sb/Government.sol analyzed (1 contracts), 10 result(s) found
